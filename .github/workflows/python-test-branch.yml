name: Python tests

on:
  push:
    branches: [ test_branch,user,master ]
  pull_request:
    branches: [ test_branch,user,master ]
env:
  SECRET_KEY: ${{secrets.SECRET_KEY}}
  DEBUG: ${{secrets.DEBUG}}
  EMAIL_HOST: ${{secrets.EMAIL_HOST}}
  EMAIL_HOST_USER: ${{secrets.EMAIL_HOST_USER}}
  EMAIL_HOST_PASSWORD: ${{secrets.EMAIL_HOST_PASSWORD}}
  EMAIL_PORT: ${{secrets.EMAIL_PORT}}
  EMAIL_USE_TLS: ${{secrets.EMAIL_USE_TLS}}
    

jobs:
  test:

    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: [3.9]

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
       
    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        python -m pip install poetry
        poetry config virtualenvs.create false --local
        poetry install
        #if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics
    - name: Test with Unittest
      env:
        SECRET_KEY: ${{secrets.SECRET_KEY}}
        DEBUG: ${{secrets.DEBUG}}
        EMAIL_HOST: ${{secrets.EMAIL_HOST}}
        EMAIL_HOST_USER: ${{secrets.EMAIL_HOST_USER}}
        EMAIL_HOST_PASSWORD: ${{secrets.EMAIL_HOST_PASSWORD}}
        EMAIL_PORT: ${{secrets.EMAIL_PORT}}
        EMAIL_USE_TLS: ${{secrets.EMAIL_USE_TLS}}
      run: |
        python3 manage.py test
        python manage.py test


